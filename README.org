#+TITLE: Distribution of points on the surface of the sphere
#+SUBTITLE: A self-study case to code develoment, documantation and Git.
#+AUTHOR: Baudilio Tejerina

* Introduction

  This project is merely intended to learn and practice software development techniques using Git
  version control and Github services.

  The project consists in the classic distribution of points on the surface of a sphere. References will be provided.

  I will use Fortran 90 as programming language with the editor Emacs.

  Small modification with this line done in TY. (testing only).


* Emacs

** The directory local variables


* Directory structure of the project

 The CWD, which is a git repositor, and two subdirectories: prog/ and lib/
 In addition CWD contains .git/, .dir-locals.el, .gitignore, README.org (this file), README.md

 For CMake, I've added the file [[file:CMakeLists.txt][CMakeLists.txt]]

 prog/ contains the source code, main.f90 and another [[file:prog/CMakeLists.txt][file:~/spheres/prog/CMakeLists.txt]]
 lib/ contains its own [[file:lib/CMakeLists.txt][CMakeLists.txt]] and code that constitute the library of the project.

* CMake

  $> cmake .
  $> make
  $> prog/example.x

  In leon, I need to specify the compiler, gfortran, explicitly:
  $> module load cmake
  $> cmake -DCMAKE_Fortran_COMPILER=gfortran  .

  BTA: see also

  $> ccmake .

** Visualize

$> module load jmol
$> jmol alea3.xyz



* Download

* Algorithms

  1. StaffKujilaars
  2. Fibonacci [fn:e].
  3. J.O. Rouke
  4. Alearoty

     - alea :: Two RNDs (theta and phi)
       in [0, pi) and [0, 2pi)
       respectively.

     - alea2 :: Three RNDs (x,y,z) in
        [-1, 1) and then project, or
        normalize to the r of the sphere.

     - alea3 :: Similar to alea2 but the
       sphere, inside the cube of d = 2,
       divides it in to regions of equal
       volume. Therefore, its r = cubic
       root of (3*pi) times d/2. BTA: I
       don't think there is any
       difference with alea2. However, I
       can raise the question, what are
       the distributions of the
       projection on the sphere of the
       points created inside and
       outside? What is the effect of
       the information needed and
       gathered to discriminate the
       points in this particular way, on
       the distribution(s)? I need an
       'if' statement that interrogates
       the points and with the
       information obtained through the
       answers, label(e.g. color) the
       points on the surface of the
       sphere.

     - alea4 :: (phi, theta) plus
       the Jacobian of change of the
       coordinates. This is Sobol's methods.

     - sobol :: Sobol's method. See page
       79 of the reference book, and
       eq. 3.9 and 3.10 on page 80.

       #+begin_src bibtex
@Book{sobol1994a,
title = {A primer for the Monte Carlo method},
author = {Sobol', I. M.},
publisher = {CRC Press},
address = {Boca Raton},
year = {1994},
isbn = {084938673x},
}
       #+end_src

The results are written in .xyz files
     that can be visualized with the
     molecular visualization tool JMol

* Use

* Reference

 BTA: Algorithms are from http://web.archive.org/web/20120421191837/http://cgafaq.info/wiki/Evenly_distributed_points_on_sphere



* Footnotes

[fn:e] https://www.openprocessing.org/sketch/41142
